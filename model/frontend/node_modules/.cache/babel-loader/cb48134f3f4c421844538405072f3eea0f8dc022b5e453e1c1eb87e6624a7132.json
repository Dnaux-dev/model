{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\model\\\\model\\\\frontend\\\\src\\\\components\\\\VideoFeed.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport Typography from '@mui/material/Typography';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ZONE = {\n  x1: 100,\n  y1: 100,\n  x2: 400,\n  y2: 400\n};\nfunction VideoFeed() {\n  _s();\n  const [alerts, setAlerts] = useState([]);\n  const [latestAlert, setLatestAlert] = useState(null);\n  const videoRef = useRef();\n  const canvasRef = useRef();\n\n  // Poll alerts\n  useEffect(() => {\n    const fetchAlerts = async () => {\n      const loiterRes = await fetch('/loitering_alerts');\n      const intrusionRes = await fetch('/intrusion_alerts');\n      const loiterData = await loiterRes.json();\n      const intrusionData = await intrusionRes.json();\n      let allAlerts = [];\n      if (loiterData.loitering_alerts) {\n        allAlerts = allAlerts.concat(loiterData.loitering_alerts.map(a => ({\n          type: 'loitering',\n          id: a.track_id,\n          time: new Date(a.entry_time * 1000).toLocaleTimeString(),\n          duration: a.duration ? a.duration.toFixed(1) : null\n        })));\n      }\n      if (intrusionData.intrusion_alerts) {\n        allAlerts = allAlerts.concat(intrusionData.intrusion_alerts.map(a => ({\n          type: 'intrusion',\n          id: a.track_id,\n          time: new Date(a.entry_time * 1000).toLocaleTimeString()\n        })));\n      }\n      // Sort by time descending\n      allAlerts.sort((a, b) => b.time.localeCompare(a.time));\n      setAlerts(allAlerts);\n      setLatestAlert(allAlerts[0] || null);\n    };\n    fetchAlerts();\n    const interval = setInterval(fetchAlerts, 1000);\n    return () => clearInterval(interval);\n  }, []);\n\n  // Draw zone overlay\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.strokeStyle = 'red';\n    ctx.lineWidth = 3;\n    ctx.strokeRect(ZONE.x1, ZONE.y1, ZONE.x2 - ZONE.x1, ZONE.y2 - ZONE.y1);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    position: \"relative\",\n    width: 640,\n    height: 480,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      ref: videoRef,\n      src: \"/video_feed\",\n      alt: \"Video Feed\",\n      width: 640,\n      height: 480,\n      style: {\n        display: 'block'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: 640,\n      height: 480,\n      style: {\n        position: 'absolute',\n        left: 0,\n        top: 0,\n        pointerEvents: 'none'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), latestAlert && /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 6,\n      sx: {\n        position: 'absolute',\n        top: 24,\n        left: '50%',\n        transform: 'translateX(-50%)',\n        bgcolor: latestAlert.type === 'intrusion' ? 'error.main' : 'warning.main',\n        color: 'white',\n        px: 4,\n        py: 2,\n        fontSize: 24,\n        zIndex: 10,\n        minWidth: 320,\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        fontWeight: \"bold\",\n        children: latestAlert.type === 'intrusion' ? `ZONE INTRUSION ALERT!` : `LOITERING DETECTED!`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: [\"Person ID: \", latestAlert.id, latestAlert.type === 'loitering' && latestAlert.duration ? ` (Duration: ${latestAlert.duration}s)` : '']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"caption\",\n        children: latestAlert.time\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        position: 'absolute',\n        bottom: 0,\n        left: 0,\n        width: '100%',\n        bgcolor: 'rgba(0,0,0,0.7)',\n        color: 'white',\n        px: 2,\n        py: 1,\n        maxHeight: 120,\n        overflowY: 'auto'\n      },\n      children: alerts.map((alert, idx) => /*#__PURE__*/_jsxDEV(Typography, {\n        fontSize: 14,\n        children: [\"[\", alert.time, \"] \", alert.type === 'intrusion' ? 'Zone intrusion' : 'Loitering', \" - Person ID: \", alert.id, alert.type === 'loitering' && alert.duration ? ` (Duration: ${alert.duration}s)` : '']\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(VideoFeed, \"zgQWb93kMx/3G/iokti8l5GOL/M=\");\n_c = VideoFeed;\nexport default VideoFeed;\nvar _c;\n$RefreshReg$(_c, \"VideoFeed\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Box","Paper","Typography","jsxDEV","_jsxDEV","ZONE","x1","y1","x2","y2","VideoFeed","_s","alerts","setAlerts","latestAlert","setLatestAlert","videoRef","canvasRef","fetchAlerts","loiterRes","fetch","intrusionRes","loiterData","json","intrusionData","allAlerts","loitering_alerts","concat","map","a","type","id","track_id","time","Date","entry_time","toLocaleTimeString","duration","toFixed","intrusion_alerts","sort","b","localeCompare","interval","setInterval","clearInterval","canvas","current","ctx","getContext","clearRect","width","height","strokeStyle","lineWidth","strokeRect","position","children","ref","src","alt","style","display","fileName","_jsxFileName","lineNumber","columnNumber","left","top","pointerEvents","elevation","sx","transform","bgcolor","color","px","py","fontSize","zIndex","minWidth","textAlign","variant","fontWeight","bottom","maxHeight","overflowY","alert","idx","_c","$RefreshReg$"],"sources":["C:/Users/USER/Desktop/model/model/frontend/src/components/VideoFeed.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Paper from '@mui/material/Paper';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nconst ZONE = { x1: 100, y1: 100, x2: 400, y2: 400 };\r\n\r\nfunction VideoFeed() {\r\n  const [alerts, setAlerts] = useState([]);\r\n  const [latestAlert, setLatestAlert] = useState(null);\r\n  const videoRef = useRef();\r\n  const canvasRef = useRef();\r\n\r\n  // Poll alerts\r\n  useEffect(() => {\r\n    const fetchAlerts = async () => {\r\n      const loiterRes = await fetch('/loitering_alerts');\r\n      const intrusionRes = await fetch('/intrusion_alerts');\r\n      const loiterData = await loiterRes.json();\r\n      const intrusionData = await intrusionRes.json();\r\n      let allAlerts = [];\r\n      if (loiterData.loitering_alerts) {\r\n        allAlerts = allAlerts.concat(\r\n          loiterData.loitering_alerts.map(a => ({\r\n            type: 'loitering',\r\n            id: a.track_id,\r\n            time: new Date(a.entry_time * 1000).toLocaleTimeString(),\r\n            duration: a.duration ? a.duration.toFixed(1) : null\r\n          }))\r\n        );\r\n      }\r\n      if (intrusionData.intrusion_alerts) {\r\n        allAlerts = allAlerts.concat(\r\n          intrusionData.intrusion_alerts.map(a => ({\r\n            type: 'intrusion',\r\n            id: a.track_id,\r\n            time: new Date(a.entry_time * 1000).toLocaleTimeString()\r\n          }))\r\n        );\r\n      }\r\n      // Sort by time descending\r\n      allAlerts.sort((a, b) => b.time.localeCompare(a.time));\r\n      setAlerts(allAlerts);\r\n      setLatestAlert(allAlerts[0] || null);\r\n    };\r\n    fetchAlerts();\r\n    const interval = setInterval(fetchAlerts, 1000);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  // Draw zone overlay\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext('2d');\r\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n    ctx.strokeStyle = 'red';\r\n    ctx.lineWidth = 3;\r\n    ctx.strokeRect(ZONE.x1, ZONE.y1, ZONE.x2 - ZONE.x1, ZONE.y2 - ZONE.y1);\r\n  }, []);\r\n\r\n  return (\r\n    <Box position=\"relative\" width={640} height={480}>\r\n      {/* Video feed */}\r\n      <img\r\n        ref={videoRef}\r\n        src=\"/video_feed\"\r\n        alt=\"Video Feed\"\r\n        width={640}\r\n        height={480}\r\n        style={{ display: 'block' }}\r\n      />\r\n      {/* Canvas overlay for zone */}\r\n      <canvas\r\n        ref={canvasRef}\r\n        width={640}\r\n        height={480}\r\n        style={{ position: 'absolute', left: 0, top: 0, pointerEvents: 'none' }}\r\n      />\r\n      {/* Latest alert overlay */}\r\n      {latestAlert && (\r\n        <Paper\r\n          elevation={6}\r\n          sx={{\r\n            position: 'absolute',\r\n            top: 24,\r\n            left: '50%',\r\n            transform: 'translateX(-50%)',\r\n            bgcolor: latestAlert.type === 'intrusion' ? 'error.main' : 'warning.main',\r\n            color: 'white',\r\n            px: 4,\r\n            py: 2,\r\n            fontSize: 24,\r\n            zIndex: 10,\r\n            minWidth: 320,\r\n            textAlign: 'center',\r\n          }}\r\n        >\r\n          <Typography variant=\"h5\" fontWeight=\"bold\">\r\n            {latestAlert.type === 'intrusion'\r\n              ? `ZONE INTRUSION ALERT!`\r\n              : `LOITERING DETECTED!`}\r\n          </Typography>\r\n          <Typography>\r\n            Person ID: {latestAlert.id}\r\n            {latestAlert.type === 'loitering' && latestAlert.duration\r\n              ? ` (Duration: ${latestAlert.duration}s)`\r\n              : ''}\r\n          </Typography>\r\n          <Typography variant=\"caption\">{latestAlert.time}</Typography>\r\n        </Paper>\r\n      )}\r\n      {/* Alert log at bottom */}\r\n      <Box\r\n        sx={{\r\n          position: 'absolute',\r\n          bottom: 0,\r\n          left: 0,\r\n          width: '100%',\r\n          bgcolor: 'rgba(0,0,0,0.7)',\r\n          color: 'white',\r\n          px: 2,\r\n          py: 1,\r\n          maxHeight: 120,\r\n          overflowY: 'auto',\r\n        }}\r\n      >\r\n        {alerts.map((alert, idx) => (\r\n          <Typography key={idx} fontSize={14}>\r\n            [{alert.time}] {alert.type === 'intrusion' ? 'Zone intrusion' : 'Loitering'} - Person ID: {alert.id}\r\n            {alert.type === 'loitering' && alert.duration ? ` (Duration: ${alert.duration}s)` : ''}\r\n          </Typography>\r\n        ))}\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default VideoFeed; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}