{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\model\\\\model\\\\frontend\\\\src\\\\components\\\\VideoFeed.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport Typography from '@mui/material/Typography';\nimport Button from '@mui/material/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VIDEO_WIDTH = 640;\nconst VIDEO_HEIGHT = 480;\nfunction VideoFeed() {\n  _s();\n  const [alerts, setAlerts] = useState([]);\n  const [latestAlert, setLatestAlert] = useState(null);\n  const [zone, setZone] = useState(null); // {x1, y1, x2, y2}\n  const [drawing, setDrawing] = useState(false);\n  const [startPoint, setStartPoint] = useState(null);\n  const [endPoint, setEndPoint] = useState(null);\n  const videoRef = useRef();\n  const canvasRef = useRef();\n\n  // Poll alerts\n  useEffect(() => {\n    const fetchAlerts = async () => {\n      const loiterRes = await fetch('http://localhost:8000/loitering_alerts');\n      const intrusionRes = await fetch('http://localhost:8000/intrusion_alerts');\n      const loiterData = await loiterRes.json();\n      const intrusionData = await intrusionRes.json();\n      let allAlerts = [];\n      if (loiterData.loitering_alerts) {\n        allAlerts = allAlerts.concat(loiterData.loitering_alerts.map(a => ({\n          type: 'loitering',\n          id: a.track_id,\n          time: new Date(a.entry_time * 1000).toLocaleTimeString(),\n          duration: a.duration ? a.duration.toFixed(1) : null\n        })));\n      }\n      if (intrusionData.intrusion_alerts) {\n        allAlerts = allAlerts.concat(intrusionData.intrusion_alerts.map(a => ({\n          type: 'intrusion',\n          id: a.track_id,\n          time: new Date(a.entry_time * 1000).toLocaleTimeString()\n        })));\n      }\n      // Sort by time descending\n      allAlerts.sort((a, b) => b.time.localeCompare(a.time));\n      setAlerts(allAlerts);\n      setLatestAlert(allAlerts[0] || null);\n    };\n    fetchAlerts();\n    const interval = setInterval(fetchAlerts, 1000);\n    return () => clearInterval(interval);\n  }, []);\n\n  // Draw overlays (zone, drawing rectangle)\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    // Draw zone\n    if (zone) {\n      ctx.strokeStyle = 'red';\n      ctx.lineWidth = 3;\n      ctx.strokeRect(zone.x1, zone.y1, zone.x2 - zone.x1, zone.y2 - zone.y1);\n    }\n    // Draw current drawing rectangle\n    if (drawing && startPoint && endPoint) {\n      ctx.strokeStyle = 'blue';\n      ctx.lineWidth = 2;\n      const x = Math.min(startPoint.x, endPoint.x);\n      const y = Math.min(startPoint.y, endPoint.y);\n      const w = Math.abs(startPoint.x - endPoint.x);\n      const h = Math.abs(startPoint.y - endPoint.y);\n      ctx.strokeRect(x, y, w, h);\n    }\n  }, [zone, drawing, startPoint, endPoint]);\n\n  // Mouse event handlers for drawing zone\n  const handleCanvasMouseDown = e => {\n    const rect = canvasRef.current.getBoundingClientRect();\n    const x = Math.round(e.clientX - rect.left);\n    const y = Math.round(e.clientY - rect.top);\n    setDrawing(true);\n    setStartPoint({\n      x,\n      y\n    });\n    setEndPoint({\n      x,\n      y\n    });\n  };\n  const handleCanvasMouseMove = e => {\n    if (!drawing) return;\n    const rect = canvasRef.current.getBoundingClientRect();\n    const x = Math.round(e.clientX - rect.left);\n    const y = Math.round(e.clientY - rect.top);\n    setEndPoint({\n      x,\n      y\n    });\n  };\n  const handleCanvasMouseUp = async e => {\n    if (!drawing) return;\n    setDrawing(false);\n    const rect = canvasRef.current.getBoundingClientRect();\n    const x2 = Math.round(e.clientX - rect.left);\n    const y2 = Math.round(e.clientY - rect.top);\n    const x1 = startPoint.x;\n    const y1 = startPoint.y;\n    // Normalize coordinates\n    const zoneCoords = {\n      x1: Math.min(x1, x2),\n      y1: Math.min(y1, y2),\n      x2: Math.max(x1, x2),\n      y2: Math.max(y1, y2)\n    };\n    setZone(zoneCoords);\n    // Send to backend\n    await fetch('http://localhost:8000/set_zone', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(zoneCoords)\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    position: \"relative\",\n    width: VIDEO_WIDTH,\n    height: VIDEO_HEIGHT,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      ref: videoRef,\n      src: \"http://localhost:8000/video_feed\",\n      alt: \"Video Feed\",\n      width: VIDEO_WIDTH,\n      height: VIDEO_HEIGHT,\n      style: {\n        display: 'block'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: VIDEO_WIDTH,\n      height: VIDEO_HEIGHT,\n      style: {\n        position: 'absolute',\n        left: 0,\n        top: 0,\n        pointerEvents: 'auto',\n        zIndex: 2\n      },\n      onMouseDown: handleCanvasMouseDown,\n      onMouseMove: handleCanvasMouseMove,\n      onMouseUp: handleCanvasMouseUp\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      sx: {\n        position: 'absolute',\n        top: 16,\n        right: 16,\n        zIndex: 3\n      },\n      onClick: () => {\n        setZone(null);\n        setStartPoint(null);\n        setEndPoint(null);\n      },\n      children: \"Draw Zone\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), latestAlert && /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 6,\n      sx: {\n        position: 'absolute',\n        top: 24,\n        left: '50%',\n        transform: 'translateX(-50%)',\n        bgcolor: latestAlert.type === 'intrusion' ? 'error.main' : 'warning.main',\n        color: 'white',\n        px: 4,\n        py: 2,\n        fontSize: 24,\n        zIndex: 10,\n        minWidth: 320,\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        fontWeight: \"bold\",\n        children: latestAlert.type === 'intrusion' ? `ZONE INTRUSION ALERT!` : `LOITERING DETECTED!`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: [\"Person ID: \", latestAlert.id, latestAlert.type === 'loitering' && latestAlert.duration ? ` (Duration: ${latestAlert.duration}s)` : '']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"caption\",\n        children: latestAlert.time\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        position: 'absolute',\n        bottom: 0,\n        left: 0,\n        width: '100%',\n        bgcolor: 'rgba(0,0,0,0.7)',\n        color: 'white',\n        px: 2,\n        py: 1,\n        maxHeight: 120,\n        overflowY: 'auto'\n      },\n      children: alerts.map((alert, idx) => /*#__PURE__*/_jsxDEV(Typography, {\n        fontSize: 14,\n        children: [\"[\", alert.time, \"] \", alert.type === 'intrusion' ? 'Zone intrusion' : 'Loitering', \" - Person ID: \", alert.id, alert.type === 'loitering' && alert.duration ? ` (Duration: ${alert.duration}s)` : '']\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 5\n  }, this);\n}\n_s(VideoFeed, \"djXcidxXCWCUcCkbeK0azgi+Pew=\");\n_c = VideoFeed;\nexport default VideoFeed;\nvar _c;\n$RefreshReg$(_c, \"VideoFeed\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Box","Paper","Typography","Button","jsxDEV","_jsxDEV","VIDEO_WIDTH","VIDEO_HEIGHT","VideoFeed","_s","alerts","setAlerts","latestAlert","setLatestAlert","zone","setZone","drawing","setDrawing","startPoint","setStartPoint","endPoint","setEndPoint","videoRef","canvasRef","fetchAlerts","loiterRes","fetch","intrusionRes","loiterData","json","intrusionData","allAlerts","loitering_alerts","concat","map","a","type","id","track_id","time","Date","entry_time","toLocaleTimeString","duration","toFixed","intrusion_alerts","sort","b","localeCompare","interval","setInterval","clearInterval","canvas","current","ctx","getContext","clearRect","width","height","strokeStyle","lineWidth","strokeRect","x1","y1","x2","y2","x","Math","min","y","w","abs","h","handleCanvasMouseDown","e","rect","getBoundingClientRect","round","clientX","left","clientY","top","handleCanvasMouseMove","handleCanvasMouseUp","zoneCoords","max","method","headers","body","JSON","stringify","position","children","ref","src","alt","style","display","fileName","_jsxFileName","lineNumber","columnNumber","pointerEvents","zIndex","onMouseDown","onMouseMove","onMouseUp","variant","color","sx","right","onClick","elevation","transform","bgcolor","px","py","fontSize","minWidth","textAlign","fontWeight","bottom","maxHeight","overflowY","alert","idx","_c","$RefreshReg$"],"sources":["C:/Users/USER/Desktop/model/model/frontend/src/components/VideoFeed.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Paper from '@mui/material/Paper';\r\nimport Typography from '@mui/material/Typography';\r\nimport Button from '@mui/material/Button';\r\n\r\nconst VIDEO_WIDTH = 640;\r\nconst VIDEO_HEIGHT = 480;\r\n\r\nfunction VideoFeed() {\r\n  const [alerts, setAlerts] = useState([]);\r\n  const [latestAlert, setLatestAlert] = useState(null);\r\n  const [zone, setZone] = useState(null); // {x1, y1, x2, y2}\r\n  const [drawing, setDrawing] = useState(false);\r\n  const [startPoint, setStartPoint] = useState(null);\r\n  const [endPoint, setEndPoint] = useState(null);\r\n  const videoRef = useRef();\r\n  const canvasRef = useRef();\r\n\r\n  // Poll alerts\r\n  useEffect(() => {\r\n    const fetchAlerts = async () => {\r\n      const loiterRes = await fetch('http://localhost:8000/loitering_alerts');\r\n      const intrusionRes = await fetch('http://localhost:8000/intrusion_alerts');\r\n      const loiterData = await loiterRes.json();\r\n      const intrusionData = await intrusionRes.json();\r\n      let allAlerts = [];\r\n      if (loiterData.loitering_alerts) {\r\n        allAlerts = allAlerts.concat(\r\n          loiterData.loitering_alerts.map(a => ({\r\n            type: 'loitering',\r\n            id: a.track_id,\r\n            time: new Date(a.entry_time * 1000).toLocaleTimeString(),\r\n            duration: a.duration ? a.duration.toFixed(1) : null\r\n          }))\r\n        );\r\n      }\r\n      if (intrusionData.intrusion_alerts) {\r\n        allAlerts = allAlerts.concat(\r\n          intrusionData.intrusion_alerts.map(a => ({\r\n            type: 'intrusion',\r\n            id: a.track_id,\r\n            time: new Date(a.entry_time * 1000).toLocaleTimeString()\r\n          }))\r\n        );\r\n      }\r\n      // Sort by time descending\r\n      allAlerts.sort((a, b) => b.time.localeCompare(a.time));\r\n      setAlerts(allAlerts);\r\n      setLatestAlert(allAlerts[0] || null);\r\n    };\r\n    fetchAlerts();\r\n    const interval = setInterval(fetchAlerts, 1000);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  // Draw overlays (zone, drawing rectangle)\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext('2d');\r\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n    // Draw zone\r\n    if (zone) {\r\n      ctx.strokeStyle = 'red';\r\n      ctx.lineWidth = 3;\r\n      ctx.strokeRect(zone.x1, zone.y1, zone.x2 - zone.x1, zone.y2 - zone.y1);\r\n    }\r\n    // Draw current drawing rectangle\r\n    if (drawing && startPoint && endPoint) {\r\n      ctx.strokeStyle = 'blue';\r\n      ctx.lineWidth = 2;\r\n      const x = Math.min(startPoint.x, endPoint.x);\r\n      const y = Math.min(startPoint.y, endPoint.y);\r\n      const w = Math.abs(startPoint.x - endPoint.x);\r\n      const h = Math.abs(startPoint.y - endPoint.y);\r\n      ctx.strokeRect(x, y, w, h);\r\n    }\r\n  }, [zone, drawing, startPoint, endPoint]);\r\n\r\n  // Mouse event handlers for drawing zone\r\n  const handleCanvasMouseDown = (e) => {\r\n    const rect = canvasRef.current.getBoundingClientRect();\r\n    const x = Math.round((e.clientX - rect.left));\r\n    const y = Math.round((e.clientY - rect.top));\r\n    setDrawing(true);\r\n    setStartPoint({ x, y });\r\n    setEndPoint({ x, y });\r\n  };\r\n\r\n  const handleCanvasMouseMove = (e) => {\r\n    if (!drawing) return;\r\n    const rect = canvasRef.current.getBoundingClientRect();\r\n    const x = Math.round((e.clientX - rect.left));\r\n    const y = Math.round((e.clientY - rect.top));\r\n    setEndPoint({ x, y });\r\n  };\r\n\r\n  const handleCanvasMouseUp = async (e) => {\r\n    if (!drawing) return;\r\n    setDrawing(false);\r\n    const rect = canvasRef.current.getBoundingClientRect();\r\n    const x2 = Math.round((e.clientX - rect.left));\r\n    const y2 = Math.round((e.clientY - rect.top));\r\n    const x1 = startPoint.x;\r\n    const y1 = startPoint.y;\r\n    // Normalize coordinates\r\n    const zoneCoords = {\r\n      x1: Math.min(x1, x2),\r\n      y1: Math.min(y1, y2),\r\n      x2: Math.max(x1, x2),\r\n      y2: Math.max(y1, y2)\r\n    };\r\n    setZone(zoneCoords);\r\n    // Send to backend\r\n    await fetch('http://localhost:8000/set_zone', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(zoneCoords)\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Box position=\"relative\" width={VIDEO_WIDTH} height={VIDEO_HEIGHT}>\r\n      {/* Video feed */}\r\n      <img\r\n        ref={videoRef}\r\n        src=\"http://localhost:8000/video_feed\"\r\n        alt=\"Video Feed\"\r\n        width={VIDEO_WIDTH}\r\n        height={VIDEO_HEIGHT}\r\n        style={{ display: 'block' }}\r\n      />\r\n      {/* Canvas overlay for zone and drawing */}\r\n      <canvas\r\n        ref={canvasRef}\r\n        width={VIDEO_WIDTH}\r\n        height={VIDEO_HEIGHT}\r\n        style={{ position: 'absolute', left: 0, top: 0, pointerEvents: 'auto', zIndex: 2 }}\r\n        onMouseDown={handleCanvasMouseDown}\r\n        onMouseMove={handleCanvasMouseMove}\r\n        onMouseUp={handleCanvasMouseUp}\r\n      />\r\n      {/* Draw Zone Button */}\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        sx={{ position: 'absolute', top: 16, right: 16, zIndex: 3 }}\r\n        onClick={() => { setZone(null); setStartPoint(null); setEndPoint(null); }}\r\n      >\r\n        Draw Zone\r\n      </Button>\r\n      {/* Latest alert overlay */}\r\n      {latestAlert && (\r\n        <Paper\r\n          elevation={6}\r\n          sx={{\r\n            position: 'absolute',\r\n            top: 24,\r\n            left: '50%',\r\n            transform: 'translateX(-50%)',\r\n            bgcolor: latestAlert.type === 'intrusion' ? 'error.main' : 'warning.main',\r\n            color: 'white',\r\n            px: 4,\r\n            py: 2,\r\n            fontSize: 24,\r\n            zIndex: 10,\r\n            minWidth: 320,\r\n            textAlign: 'center',\r\n          }}\r\n        >\r\n          <Typography variant=\"h5\" fontWeight=\"bold\">\r\n            {latestAlert.type === 'intrusion'\r\n              ? `ZONE INTRUSION ALERT!`\r\n              : `LOITERING DETECTED!`}\r\n          </Typography>\r\n          <Typography>\r\n            Person ID: {latestAlert.id}\r\n            {latestAlert.type === 'loitering' && latestAlert.duration\r\n              ? ` (Duration: ${latestAlert.duration}s)`\r\n              : ''}\r\n          </Typography>\r\n          <Typography variant=\"caption\">{latestAlert.time}</Typography>\r\n        </Paper>\r\n      )}\r\n      {/* Alert log at bottom */}\r\n      <Box\r\n        sx={{\r\n          position: 'absolute',\r\n          bottom: 0,\r\n          left: 0,\r\n          width: '100%',\r\n          bgcolor: 'rgba(0,0,0,0.7)',\r\n          color: 'white',\r\n          px: 2,\r\n          py: 1,\r\n          maxHeight: 120,\r\n          overflowY: 'auto',\r\n        }}\r\n      >\r\n        {alerts.map((alert, idx) => (\r\n          <Typography key={idx} fontSize={14}>\r\n            [{alert.time}] {alert.type === 'intrusion' ? 'Zone intrusion' : 'Loitering'} - Person ID: {alert.id}\r\n            {alert.type === 'loitering' && alert.duration ? ` (Duration: ${alert.duration}s)` : ''}\r\n          </Typography>\r\n        ))}\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default VideoFeed; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}